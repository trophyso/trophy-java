package so.trophy.resources.users.types;

/**
 * This file was auto-generated by Fern from our API Definition.
 */


import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import so.trophy.core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = UsersMetricEventSummaryResponseItem.Builder.class
)
public final class UsersMetricEventSummaryResponseItem {
  private final String date;

  private final double total;

  private final double change;

  private final Map<String, Object> additionalProperties;

  private UsersMetricEventSummaryResponseItem(String date, double total, double change,
      Map<String, Object> additionalProperties) {
    this.date = date;
    this.total = total;
    this.change = change;
    this.additionalProperties = additionalProperties;
  }

  /**
   * @return The date of the data point. For weekly or monthly aggregations, this is the first date of the period.
   */
  @JsonProperty("date")
  public String getDate() {
    return date;
  }

  /**
   * @return The user's total for this metric at the end of this date.
   */
  @JsonProperty("total")
  public double getTotal() {
    return total;
  }

  /**
   * @return The change in the user's total for this metric during this period.
   */
  @JsonProperty("change")
  public double getChange() {
    return change;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof UsersMetricEventSummaryResponseItem && equalTo((UsersMetricEventSummaryResponseItem) other);
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  private boolean equalTo(UsersMetricEventSummaryResponseItem other) {
    return date.equals(other.date) && total == other.total && change == other.change;
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.date, this.total, this.change);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static DateStage builder() {
    return new Builder();
  }

  public interface DateStage {
    TotalStage date(@NotNull String date);

    Builder from(UsersMetricEventSummaryResponseItem other);
  }

  public interface TotalStage {
    ChangeStage total(double total);
  }

  public interface ChangeStage {
    _FinalStage change(double change);
  }

  public interface _FinalStage {
    UsersMetricEventSummaryResponseItem build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements DateStage, TotalStage, ChangeStage, _FinalStage {
    private String date;

    private double total;

    private double change;

    @JsonAnySetter
    private Map<String, Object> additionalProperties = new HashMap<>();

    private Builder() {
    }

    @java.lang.Override
    public Builder from(UsersMetricEventSummaryResponseItem other) {
      date(other.getDate());
      total(other.getTotal());
      change(other.getChange());
      return this;
    }

    /**
     * <p>The date of the data point. For weekly or monthly aggregations, this is the first date of the period.</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @java.lang.Override
    @JsonSetter("date")
    public TotalStage date(@NotNull String date) {
      this.date = Objects.requireNonNull(date, "date must not be null");
      return this;
    }

    /**
     * <p>The user's total for this metric at the end of this date.</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @java.lang.Override
    @JsonSetter("total")
    public ChangeStage total(double total) {
      this.total = total;
      return this;
    }

    /**
     * <p>The change in the user's total for this metric during this period.</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @java.lang.Override
    @JsonSetter("change")
    public _FinalStage change(double change) {
      this.change = change;
      return this;
    }

    @java.lang.Override
    public UsersMetricEventSummaryResponseItem build() {
      return new UsersMetricEventSummaryResponseItem(date, total, change, additionalProperties);
    }
  }
}
