package so.trophy.resources.leaderboards;

/**
 * This file was auto-generated by Fern from our API Definition.
 */


import so.trophy.core.ClientOptions;
import so.trophy.core.RequestOptions;
import java.lang.String;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import so.trophy.resources.leaderboards.requests.LeaderboardsGetRequest;
import so.trophy.resources.leaderboards.types.LeaderboardsAllResponseItem;
import so.trophy.types.LeaderboardResponseWithRankings;

public class AsyncLeaderboardsClient {
  protected final ClientOptions clientOptions;

  private final AsyncRawLeaderboardsClient rawClient;

  public AsyncLeaderboardsClient(ClientOptions clientOptions) {
    this.clientOptions = clientOptions;
    this.rawClient = new AsyncRawLeaderboardsClient(clientOptions);
  }

  /**
   * Get responses with HTTP metadata like headers
   */
  public AsyncRawLeaderboardsClient withRawResponse() {
    return this.rawClient;
  }

  /**
   * Get all active leaderboards for your organization.
   */
  public CompletableFuture<List<LeaderboardsAllResponseItem>> all() {
    return this.rawClient.all().thenApply(response -> response.body());
  }

  /**
   * Get all active leaderboards for your organization.
   */
  public CompletableFuture<List<LeaderboardsAllResponseItem>> all(RequestOptions requestOptions) {
    return this.rawClient.all(requestOptions).thenApply(response -> response.body());
  }

  /**
   * Get a specific leaderboard by its key.
   */
  public CompletableFuture<LeaderboardResponseWithRankings> get(String key) {
    return this.rawClient.get(key).thenApply(response -> response.body());
  }

  /**
   * Get a specific leaderboard by its key.
   */
  public CompletableFuture<LeaderboardResponseWithRankings> get(String key,
      LeaderboardsGetRequest request) {
    return this.rawClient.get(key, request).thenApply(response -> response.body());
  }

  /**
   * Get a specific leaderboard by its key.
   */
  public CompletableFuture<LeaderboardResponseWithRankings> get(String key,
      LeaderboardsGetRequest request, RequestOptions requestOptions) {
    return this.rawClient.get(key, request, requestOptions).thenApply(response -> response.body());
  }
}
