package so.trophy.types;

/**
 * This file was auto-generated by Fern from our API Definition.
 */


import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import so.trophy.core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = PointsTriggerResponseUserAttributesItem.Builder.class
)
public final class PointsTriggerResponseUserAttributesItem {
  private final String key;

  private final String value;

  private final Map<String, Object> additionalProperties;

  private PointsTriggerResponseUserAttributesItem(String key, String value,
      Map<String, Object> additionalProperties) {
    this.key = key;
    this.value = value;
    this.additionalProperties = additionalProperties;
  }

  /**
   * @return The key of the user attribute.
   */
  @JsonProperty("key")
  public String getKey() {
    return key;
  }

  /**
   * @return The value of the user attribute.
   */
  @JsonProperty("value")
  public String getValue() {
    return value;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof PointsTriggerResponseUserAttributesItem && equalTo((PointsTriggerResponseUserAttributesItem) other);
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  private boolean equalTo(PointsTriggerResponseUserAttributesItem other) {
    return key.equals(other.key) && value.equals(other.value);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.key, this.value);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static KeyStage builder() {
    return new Builder();
  }

  public interface KeyStage {
    /**
     * <p>The key of the user attribute.</p>
     */
    ValueStage key(@NotNull String key);

    Builder from(PointsTriggerResponseUserAttributesItem other);
  }

  public interface ValueStage {
    /**
     * <p>The value of the user attribute.</p>
     */
    _FinalStage value(@NotNull String value);
  }

  public interface _FinalStage {
    PointsTriggerResponseUserAttributesItem build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements KeyStage, ValueStage, _FinalStage {
    private String key;

    private String value;

    @JsonAnySetter
    private Map<String, Object> additionalProperties = new HashMap<>();

    private Builder() {
    }

    @java.lang.Override
    public Builder from(PointsTriggerResponseUserAttributesItem other) {
      key(other.getKey());
      value(other.getValue());
      return this;
    }

    /**
     * <p>The key of the user attribute.</p>
     * <p>The key of the user attribute.</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @java.lang.Override
    @JsonSetter("key")
    public ValueStage key(@NotNull String key) {
      this.key = Objects.requireNonNull(key, "key must not be null");
      return this;
    }

    /**
     * <p>The value of the user attribute.</p>
     * <p>The value of the user attribute.</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @java.lang.Override
    @JsonSetter("value")
    public _FinalStage value(@NotNull String value) {
      this.value = Objects.requireNonNull(value, "value must not be null");
      return this;
    }

    @java.lang.Override
    public PointsTriggerResponseUserAttributesItem build() {
      return new PointsTriggerResponseUserAttributesItem(key, value, additionalProperties);
    }
  }
}
