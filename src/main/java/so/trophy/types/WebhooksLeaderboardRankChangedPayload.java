package so.trophy.types;

/**
 * This file was auto-generated by Fern from our API Definition.
 */


import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import so.trophy.core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = WebhooksLeaderboardRankChangedPayload.Builder.class
)
public final class WebhooksLeaderboardRankChangedPayload {
  private final User user;

  private final WebhookUserLeaderboardResponse leaderboard;

  private final Map<String, Object> additionalProperties;

  private WebhooksLeaderboardRankChangedPayload(User user,
      WebhookUserLeaderboardResponse leaderboard, Map<String, Object> additionalProperties) {
    this.user = user;
    this.leaderboard = leaderboard;
    this.additionalProperties = additionalProperties;
  }

  /**
   * @return The webhook event type.
   */
  @JsonProperty("type")
  public String getType() {
    return "leaderboard.rank_changed";
  }

  /**
   * @return The user whose rank changed.
   */
  @JsonProperty("user")
  public User getUser() {
    return user;
  }

  /**
   * @return The user's leaderboard data that changed.
   */
  @JsonProperty("leaderboard")
  public WebhookUserLeaderboardResponse getLeaderboard() {
    return leaderboard;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof WebhooksLeaderboardRankChangedPayload && equalTo((WebhooksLeaderboardRankChangedPayload) other);
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  private boolean equalTo(WebhooksLeaderboardRankChangedPayload other) {
    return user.equals(other.user) && leaderboard.equals(other.leaderboard);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.user, this.leaderboard);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static UserStage builder() {
    return new Builder();
  }

  public interface UserStage {
    /**
     * <p>The user whose rank changed.</p>
     */
    LeaderboardStage user(@NotNull User user);

    Builder from(WebhooksLeaderboardRankChangedPayload other);
  }

  public interface LeaderboardStage {
    /**
     * <p>The user's leaderboard data that changed.</p>
     */
    _FinalStage leaderboard(@NotNull WebhookUserLeaderboardResponse leaderboard);
  }

  public interface _FinalStage {
    WebhooksLeaderboardRankChangedPayload build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements UserStage, LeaderboardStage, _FinalStage {
    private User user;

    private WebhookUserLeaderboardResponse leaderboard;

    @JsonAnySetter
    private Map<String, Object> additionalProperties = new HashMap<>();

    private Builder() {
    }

    @java.lang.Override
    public Builder from(WebhooksLeaderboardRankChangedPayload other) {
      user(other.getUser());
      leaderboard(other.getLeaderboard());
      return this;
    }

    /**
     * <p>The user whose rank changed.</p>
     * <p>The user whose rank changed.</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @java.lang.Override
    @JsonSetter("user")
    public LeaderboardStage user(@NotNull User user) {
      this.user = Objects.requireNonNull(user, "user must not be null");
      return this;
    }

    /**
     * <p>The user's leaderboard data that changed.</p>
     * <p>The user's leaderboard data that changed.</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @java.lang.Override
    @JsonSetter("leaderboard")
    public _FinalStage leaderboard(@NotNull WebhookUserLeaderboardResponse leaderboard) {
      this.leaderboard = Objects.requireNonNull(leaderboard, "leaderboard must not be null");
      return this;
    }

    @java.lang.Override
    public WebhooksLeaderboardRankChangedPayload build() {
      return new WebhooksLeaderboardRankChangedPayload(user, leaderboard, additionalProperties);
    }
  }
}
