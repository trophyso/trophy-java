package so.trophy;

/**
 * This file was auto-generated by Fern from our API Definition.
 */

import so.trophy.core.ClientOptions;
import so.trophy.core.Suppliers;
import java.util.function.Supplier;
import so.trophy.resources.achievements.AchievementsClient;
import so.trophy.resources.admin.AdminClient;
import so.trophy.resources.leaderboards.LeaderboardsClient;
import so.trophy.resources.metrics.MetricsClient;
import so.trophy.resources.points.PointsClient;
import so.trophy.resources.streaks.StreaksClient;
import so.trophy.resources.users.UsersClient;

public class TrophyApiClient {
  protected final ClientOptions clientOptions;

  protected final Supplier<AchievementsClient> achievementsClient;

  protected final Supplier<MetricsClient> metricsClient;

  protected final Supplier<UsersClient> usersClient;

  protected final Supplier<StreaksClient> streaksClient;

  protected final Supplier<PointsClient> pointsClient;

  protected final Supplier<LeaderboardsClient> leaderboardsClient;

  protected final Supplier<AdminClient> adminClient;

  public TrophyApiClient(ClientOptions clientOptions) {
    this.clientOptions = clientOptions;
    this.achievementsClient = Suppliers.memoize(() -> new AchievementsClient(clientOptions));
    this.metricsClient = Suppliers.memoize(() -> new MetricsClient(clientOptions));
    this.usersClient = Suppliers.memoize(() -> new UsersClient(clientOptions));
    this.streaksClient = Suppliers.memoize(() -> new StreaksClient(clientOptions));
    this.pointsClient = Suppliers.memoize(() -> new PointsClient(clientOptions));
    this.leaderboardsClient = Suppliers.memoize(() -> new LeaderboardsClient(clientOptions));
    this.adminClient = Suppliers.memoize(() -> new AdminClient(clientOptions));
  }

  public AchievementsClient achievements() {
    return this.achievementsClient.get();
  }

  public MetricsClient metrics() {
    return this.metricsClient.get();
  }

  public UsersClient users() {
    return this.usersClient.get();
  }

  public StreaksClient streaks() {
    return this.streaksClient.get();
  }

  public PointsClient points() {
    return this.pointsClient.get();
  }

  public LeaderboardsClient leaderboards() {
    return this.leaderboardsClient.get();
  }

  public AdminClient admin() {
    return this.adminClient.get();
  }

  public static TrophyApiClientBuilder builder() {
    return new TrophyApiClientBuilder();
  }
}
